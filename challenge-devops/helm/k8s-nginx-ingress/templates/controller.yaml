apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    {{- include "k8s-nginx-ingress.labels" . | nindent 4 }}
  name: ingress-nginx
  namespace: {{ .Values.deployment.namespace }}
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      nodePort: 30080
      protocol: TCP
      name: http
  selector:
    {{- include "k8s-nginx-ingress.selectorLabels" . | nindent 4 }}
---
# Source: ingress-nginx/templates/controller-ingressclass.yaml
# We don't support namespaced ingressClass yet
# So a ClusterRole and a ClusterRoleBinding is required
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    {{- include "k8s-nginx-ingress.labels" . | nindent 4 }}
  name: nginx
  namespace: {{ .Values.deployment.namespace }}
spec:
  controller: k8s.io/ingress-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: {{ .Values.deployment.namespace }}
  labels:
    {{- include "k8s-nginx-ingress.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      {{- include "k8s-nginx-ingress.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k8s-nginx-ingress.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "k8s-nginx-ingress.serviceAccountName" . }}
      hostNetwork: false
      terminationGracePeriodSeconds: 300
      containers:
        - image: {{ .Values.nginx.image }}
          name: nginx-ingress-controller
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
          args:
            - /nginx-ingress-controller
            - "--controller-class=k8s.io/ingress-nginx"
            - "--configmap=$(POD_NAMESPACE)/ingress-nginx-controller"
            - "--annotations-prefix=nginx.ingress.kubernetes.io"
            - "--election-id=ingress-controller-leader"
            - "--ingress-class=demo-nginx-controller"
            - "--enable-metrics"
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          - name: prometheus
            containerPort: 9113
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: {{ .Values.nginx.cpulimit }}
              memory: {{ .Values.nginx.memorylimit }}
            requests:
              cpu: {{ .Values.nginx.cpurequest }}
              memory: {{ .Values.nginx.memoryrequest }}
          securityContext:
            allowPrivilegeEscalation: true
            runAsUser: 101 #nginx
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LD_PRELOAD
            value: /usr/local/lib/libmimalloc.so

